@page "/createcontact"
@using BlazorApp.Data
@using Microsoft.EntityFrameworkCore;
@inject NavigationManager Navigation
@inject IDbContextFactory<ContactContext> DbFactory
@using BlazorApp.Services
@inject ContactService contactService

<h3>Add Contact</h3>

<EditForm Model="newContact" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="FirstName">First Name:</label>
        <InputText id="FirstName" @bind-Value="newContact.FirstName" class="form-control" />
    </div>

    <div class="form-group">
        <label for="LastName">Last Name:</label>
        <InputText id="LastName" @bind-Value="newContact.LastName" class="form-control" />
    </div>

    <div class="form-group">
        <label for="PhoneNumber">Phone Number:</label>
        <InputText id="PhoneNumber" @bind-Value="newContact.PhoneNumber" class="form-control" />
    </div>

    <div class="form-group">
        <label for="DateOfBirth">Date of Birth:</label>
        <InputDate id="DateOfBirth" @bind-Value="newContact.BirthDate" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    
    <button type="button" class="btn btn-secondary" @onclick="NavigateToIndex">Cancel</button>
</EditForm>

@code {
    private Contact newContact = new Contact();

    private void HandleValidSubmit(EditContext editContext)
    {
        var contact = (Contact)editContext.Model;
        contactService.AddContact(contact);
        
        Navigation.NavigateTo("/");
    }
    /* This code works prefectly fine when we dont need to use the ContactService
     * private async Task HandleValidSubmit()
    {
        using (var context = DbFactory.CreateDbContext())
        {
            context.Contacts.Add(NewContact);
            await context.SaveChangesAsync();
        }
        Navigation.NavigateTo("/");
    }*/

    private void NavigateToIndex()
    {
        Navigation.NavigateTo("/");
    }
}
